{"version":3,"sources":["components/Header.js","hooks/useSelect.js","components/Formulario.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","useSelect","stateInicial","opciones","useState","state","actualizarState","value","onChange","e","target","map","opcion","key","label","Formulario","guardarCategoria","categoria","SelectNoticias","styles","buscador","onSubmit","preventDefault","heading","type","btn_block","Noticia","noticia","urlToImage","url","title","description","source","src","rel","ListadoNoticias","noticias","App","guardarNoticias","useEffect","a","fetch","respuesta","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d2515575.chunk.js","sourcesContent":["import React from 'react';\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <nav className=\"nav-wrapper light-blue darken-3\">\r\n            <a href=\"#!\" className=\"brand-logo center\">{titulo}</a>\r\n        </nav>\r\n    );\r\n}\r\n \r\nexport default Header;","import React, {useState} from 'react';\r\n\r\n\r\nconst useSelect = (stateInicial, opciones) => {\r\n\r\n    //State del custom hook\r\n    const [state, actualizarState ] = useState(stateInicial)\r\n    const SelectNoticias = () => (\r\n        <select\r\n        className=\"browser-default\"\r\n        value={state}\r\n        onChange={e => actualizarState(e.target.value)}\r\n        >\r\n            {opciones.map(opcion => (\r\n                <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\r\n            ))}\r\n\r\n        </select>\r\n    );\r\n\r\n    return [state, SelectNoticias];\r\n}\r\n \r\nexport default useSelect;","import React from 'react';\r\nimport styles from './Formulario.module.css';\r\nimport useSelect from '../hooks/useSelect';\r\nconst Formulario = ({guardarCategoria}) => {\r\n\r\n    const OPCIONES = [\r\n        { value: 'general', label: 'General'},\r\n        { value: 'business', label: 'Negocios'},\r\n        { value: 'entertainment', label: 'Entretenimiento'},\r\n        { value: 'health', label: 'Salud'},\r\n        { value: 'science', label: 'Ciencia'},\r\n        { value: 'sports', label: 'Deportes'},\r\n        { value: 'technology', label: 'Tecnologia'}\r\n    ]\r\n    const [categoria, SelectNoticias] = useSelect('general', OPCIONES)\r\n    \r\n    //Pasar categoria a app.js\r\n    const buscarNoticias = e =>{\r\n        e.preventDefault();\r\n        guardarCategoria(categoria)\r\n    }\r\n   \r\n    return ( \r\n        <div className={`${styles.buscador} row`}>\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <form\r\n                onSubmit={buscarNoticias}\r\n                >\r\n                    <h2 className={styles.heading}>R.A.G NOTICAS</h2>\r\n                    <SelectNoticias />\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                         type=\"submit\"\r\n                         className={`${styles.btn_block} btn-large amber darken-2`}\r\n                         value=\"buscar\"\r\n                         />\r\n                    </div>\r\n                </form>\r\n            </div>    \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\n\r\nconst Noticia = ({noticia}) => {\r\n    //Extraer los datos\r\n    const {urlToImage, url, title, description, source} = noticia;\r\n    return ( \r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                <img src={urlToImage} />\r\n                </div>\r\n            <div className=\"card-content\">\r\n                <h5>{title}</h5>\r\n                <p>{description}</p>\r\n\r\n            </div>\r\n            <div className=\"card-action\">\r\n                <a\r\n                 href={url}\r\n                 rel=\"noopener noreferrer\"\r\n                target=\"_black\"\r\n                className=\"waves-effect waves-light\"\r\n                >Ver Noticia completa</a>\r\n            </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Noticia;","import React from 'react';\r\nimport Noticia from './Noticia'\r\n\r\nconst ListadoNoticias = ({noticias}) => {\r\n    return ( \r\n        <div className=\"row\">\r\n            {noticias.map(noticia=>(\r\n                <Noticia \r\n                key={noticia.url}\r\n                noticia={noticia}\r\n                />\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ListadoNoticias;","  \nimport React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListadoNoticias from './components/ListadoNoticias';\n\nfunction App() {\n\n  // definir la categoria y noticias\n  const [categoria, guardarCategoria] = useState('');\n  const [noticias, guardarNoticias] = useState([]);\n\n  useEffect(() => {\n    const consultarAPI = async () => {\n      const url = `https://newsapi.org/v2/top-headlines?country=co&category=${categoria}&apiKey=523babfa83f540b2b0c401dc1516e595`;\n\n      const respuesta = await fetch(url);\n      const noticias = await respuesta.json();\n\n      guardarNoticias(noticias.articles);\n    }\n    consultarAPI();\n  }, [categoria]);\n\n  return (\n    <Fragment>\n        <Header \n          titulo='Buscador de Noticias'\n        />\n\n        <div className=\"container white\">\n            <Formulario \n              guardarCategoria={guardarCategoria}\n            />\n\n            <ListadoNoticias \n              noticias={noticias}\n            />\n        </div>\n    </Fragment>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Formulario_heading__1P9Oi\",\"buscador\":\"Formulario_buscador__1AgLj\",\"btn_block\":\"Formulario_btn_block__1mFBQ\"};"],"sourceRoot":""}